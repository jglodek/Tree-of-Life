<?php

/**
 * BaseNeed
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $description
 * @property boolean $done
 * @property integer $category_id
 * @property Category $Category
 * 
 * @method string   getName()        Returns the current record's "name" value
 * @method string   getDescription() Returns the current record's "description" value
 * @method boolean  getDone()        Returns the current record's "done" value
 * @method integer  getCategoryId()  Returns the current record's "category_id" value
 * @method Category getCategory()    Returns the current record's "Category" value
 * @method Need     setName()        Sets the current record's "name" value
 * @method Need     setDescription() Sets the current record's "description" value
 * @method Need     setDone()        Sets the current record's "done" value
 * @method Need     setCategoryId()  Sets the current record's "category_id" value
 * @method Need     setCategory()    Sets the current record's "Category" value
 * 
 * @package    Tree-of-Life
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseNeed extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('need');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('done', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('category_id', 'integer', null, array(
             'type' => 'integer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Category', array(
             'local' => 'category_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}